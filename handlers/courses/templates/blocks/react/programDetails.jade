+b.courses-parts.courses-mix
  +e('h2').title Основные темы программы

  +b.tabbed-pane._01

    +e('ul').tabs
      +e('li').tab._01 Неделя 1
      +e('li').tab._02 Неделя 2
      +e('li').tab._03 Неделя 3
      +e('li').tab._04 Неделя 4

    +e.body._01
      +e('h2').title.phone-only Неделя 1

      p
        b Знакомство с React

      p.
        В этом блоке мы разберем основные идеи Реакта, научимся писать простые компоненты и узнаем,
        в чем принципиальное отличие React.js от других популярных фреймворков.
        Создадим первые компоненты, используя декларативный подход.

      ul
        li Обзор и сравнение популярных современных фреймворков: Angular, Ember, React .
        li Настройка Babel и Webpack, HMR и React-transform (react-hot-loader).
        li Основы работы с Реактом, JSX.
        li Два синтаксиса для компонентов: ES2015-классы и React.createClass.
        li Поток данных: передаем данные от родителя к дочерним элементам с помощью props.
        li Lifecycle: Жизнь React-компонента от инициализации до unmount.

    +e.body._02
      +e('h2').title.phone-only Неделя 2

      p
        b Построение приложений с React, Flux-архитектура

      p.
        Когда приложения становятся сложнее и в них появляется интерактивность,
        приходиться задумываться про организацию бизнес-логики,
        настраивать потоки данных и взаимодействие с сервером.
        Мы познакомимся с классической для Реакт-приложений архитектурой Flux,
        разберем ее в деталях, рассмотрим примеры синхронных действий и обращений к серверу.
        Создадим простое новостное приложение.


      ul
        li Facebook Flux - обзор и использование.
        li Создаем Store и Actions для управления данными, настраиваем потоки данных.
        li Концепция Умных и глупых компонентов, рекомендации по использованию.
        li Best-practice создания элементов, вспоминаем ООП.
        li Настраиваем коммуникацию с API, узнаем как не наступить на грабли.

    +e.body._03
      +e('h2').title.phone-only Неделя 3

      p
        b React для SPA: react-router и продвинутые API Реакта

      p.
        Разработка single-page applications – одно из основных направлений фронтэнда.
        Мы разберем, как строить их, используя React.
        Научимся использовать react-router и продвинутые элементы API React.JS.


      ul
        li props.children: как в JSX передавать вложенные компоненты.
        li Зачем нужен роутинг и как он устроен, проектируем структуру приложения.
        li Настраиваем вложенные роуты.
        li Выбираем и настраиваем history для нашего приложения.
        li Объеденяем с react-router и Flux.
        li Готовим компоненты к повторному использованию: propTypes, mixins, higher-order components.
        li Использование context для аутентификации.
        li Оптимизируем наше приложение с shouldComponentUpdate.
        li Узнаем как и зачем использовать иммутабельные данные.


    +e.body._04
      +e('h2').title.phone-only Неделя 4

      p
        b Современный Реакт: Redux.js

      p.
        Архитектура Flux для Реакт приложений зарекомендовала себя прекрасным образом,
        это привело к появлению её новых, улучшенных реализаций.
        Мы с вами обговорим, чего не хватало в библиотеке Flux от Facebook.
        Построим приложение с использованием Redux.js и увидим,
        какие новые возможности дает нам эта библиотека.

      ul
        li Минусы FB Flux, как библиотки, обзор альтернативных реализаций.
        li Redux.js – функциональный подход,  Redux dev tools, возможности для мониторинга и универсальных приложений.
        li Actions и Reducers, как чистые функции.
        li Настраиваем синхронный поток с Redux, переиспользуем созданные ранее компоненты.
        li React-redux для связи.
        li Варианты реализации асинхронных actions в Redux, использование Middlewares.
        li Redux c react-router.
        li Использование Redux для универсальных приложений.

script.
    var className = 'tabbed-pane', block = document.querySelector('.' + className);

    block.querySelector('.' + className + '__tabs').addEventListener('click', function(e) {
       block.className = className + ' ' + className + '_' +  e.target.className.split('_').pop();
    });



