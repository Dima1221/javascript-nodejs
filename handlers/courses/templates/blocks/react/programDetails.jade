+b.courses-parts.courses-mix
  +e('h2').title Основные темы программы

  +b.tabbed-pane._01

    +e('ul').tabs
      +e('li').tab._01 Неделя 1
      +e('li').tab._02 Неделя 2
      +e('li').tab._03 Неделя 3
      +e('li').tab._04 Неделя 4

    +e.body._01
      +e('h2').title.phone-only Неделя 1

      p
        b Знакомство с React

      p.
        В этом блоке мы разберем основные идеи Реакта, научимся писать простые компоненты и узнаем,
        в чем принципиальное отличие React.js от других популярных фреймворков.
        Создадим первые компоненты, используя декларативный подход.

      ul
        li Обзор и сравнение популярных современных фреймворков: Angular, Ember, React.
        li Настройка Babel и Webpack, HMR и React-transform (react-hot-loader).
        li Основы работы с Реактом, Virtual DOM, JSX.
        li Три синтаксиса для компонентов: Stateless components, ES2015-классы и React.createClass.
        li Поток данных: props и state.
        li Lifecycle: Жизнь React-компонента от инициализации до unmount.
        li Связь с DOM: keys & refs.
        li Готовим компоненты к повторному использованию: propTypes, mixins, decorators.

    +e.body._02
      +e('h2').title.phone-only Неделя 2

      p
        b Инфраструктура React

      p.
        Сейчас, говоря "React", уже редко имеют ввиду саму библиотеку, которая просто позволяет декларативно описывать ваш UI.
        Сегодня React – это большая инфраструктура, которая включает в себя различные бибилиотеки для работы с данными,
        бизнес-логикой, сторонними компонентами, декораторами и множеством другого полезного кода.

      ul
        li Вложенные компоненты в JSX при помощи props.children.
        li Оптимизируем наше приложение с shouldComponentUpdate.
        li Immutable.js: узнаем как и зачем использовать иммутабельные данные.
        li Анимации в React, CSSTransitionGroup.
        li Использование сторонних компонентов.

    +e.body._03
      +e('h2').title.phone-only Неделя 3

      p
        b Построение приложений с React: Redux.js

      p.
        Когда приложения становятся сложнее и в них появляется интерактивность,
        приходиться задумываться про организацию бизнес-логики,
        настраивать потоки данных и взаимодействие с сервером.
        В процесе построения простого новостного приложения мы детально разберем самую популярную библиотеку
        для одностороннего потока данных,
        узнаем ее особенности и научимся использовать дев-тулзы.

      ul
        li Знакомство с Flux – разбор основных элементов и идей.
        li Построение компонентов синхронной и асинхрнонной бизнес логики с Flux.
        li Ключевые отличия Redux и Flux.
        li Особенности Redux.js: функциональный подход, Redux dev tools, возможности для мониторинга и универсальных приложений.
        li Store, как иммутабельный отъект: Redux + Immutable.js.
        li Actions и Reducers, как чистые функции.
        li Настраиваем синхронный поток с Redux, переиспользуем созданные ранее компоненты.
        li React-redux для связи компонентов с логикой.
        li Side-effects в Redux: создание и использование Middlewares.
        li Варианты реализации асинхронных actions в Redux.

    +e.body._04
      +e('h2').title.phone-only Неделя 4

      p
        b React для SPA: react-router и продвинутые API Реакта

      p.
        Разработка single-page applications – одно из основных направлений фронтэнда.
        Мы разберем, как строить их, используя React.
        Научимся использовать react-router и продвинутые элементы API React.JS.


      ul
        li Зачем нужен роутинг и как он устроен, проектируем структуру приложения.
        li Настраиваем вложенные роуты.
        li Выбираем и настаиваем history для нашего приложения.
        li Используем context – еще один механизм передачи данных.
        li Объеденяем react-router и Redux.
        li Обзор Advanced API react-router.
        li Авторизация в react-router.


script.
    var className = 'tabbed-pane', block = document.querySelector('.' + className);

    block.querySelector('.' + className + '__tabs').addEventListener('click', function(e) {
       block.className = className + ' ' + className + '_' +  e.target.className.split('_').pop();
    });



