{"version":3,"sources":["webpack:///coursesCourse.05ab2d346bfe15eb542a.js","webpack:///./handlers/courses/client/course/index.js","webpack:///./handlers/newsletter/client/index.js","webpack:///./modules/client/xhr.js?3b46","webpack:///./modules/client/getCsrfCookie.js?4a20"],"names":["coursesCourse","webpackJsonp_name_",0,"module","exports","__webpack_require__","initNewsletterForm","form","document","querySelector","onsubmit","event","preventDefault","newsletter","submitSubscribeForm","initSignupButton","link","onclick","window","currentUser","spinner","Spinner","elem","size","class","elemClass","start","e","stop","AuthModal","callback","location","href",164,"onSuccess","elements","email","value","slugElems","slug","slugs","length","i","slugElem","checked","push","notification","Info","body","request","xhr","method","url","action","submitButton","disabled","addEventListener","formLabel","getAttribute","this","status","metrika","reachGoal","ga","Success","result","message","Error",446,"options","wrapEvent","name","CustomEvent","originalEvent","fail","reason","dispatchEvent","success","XMLHttpRequest","open","sync","csrfCookie","getCsrfCookie","skipCsrf","setRequestHeader","toString","call","JSON","stringify","noDocumentEvents","timeStart","Date","now","raw","normalStatuses","indexOf","responseText","contentType","getResponseHeader","match","json","parse","setTimeout","send",447,"cookie"],"mappings":"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","file":"coursesCourse.05ab2d346bfe15eb542a.js","sourcesContent":["var coursesCourse =\nwebpackJsonp_name_([1],{\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar newsletter = __webpack_require__(164);\n\tvar Spinner = __webpack_require__(443);\n\tvar xhr = __webpack_require__(446);\n\t\n\tinitNewsletterForm();\n\t\n\tinitSignupButton();\n\t\n\tfunction initNewsletterForm() {\n\t\n\t  var form = document.querySelector('[data-newsletter-subscribe-form]');\n\t  if (!form) return;\n\t\n\t  form.onsubmit = function (event) {\n\t    event.preventDefault();\n\t    newsletter.submitSubscribeForm(form);\n\t  };\n\t}\n\t\n\tfunction initSignupButton() {\n\t\n\t  var link = document.querySelector('[data-group-signup-link]');\n\t  if (!link) return;\n\t\n\t  link.onclick = function (event) {\n\t\n\t    if (window.currentUser) {\n\t      return;\n\t    }\n\t\n\t    event.preventDefault();\n\t\n\t    var spinner = new Spinner({\n\t      elem: link,\n\t      size: 'small',\n\t      'class': 'submit-button__spinner',\n\t      elemClass: 'submit-button_progress'\n\t    });\n\t    spinner.start();\n\t\n\t    __webpack_require__.e/* nsure */(2, function () {\n\t      spinner.stop();\n\t      var AuthModal = __webpack_require__(152);\n\t      new AuthModal({\n\t        callback: function callback() {\n\t          window.location.href = link.href;\n\t        }\n\t      });\n\t    });\n\t  };\n\t}\n\n/***/ },\n\n/***/ 164:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar Spinner = __webpack_require__(443);\n\tvar xhr = __webpack_require__(446);\n\tvar notification = __webpack_require__(440);\n\t\n\tfunction submitSubscribeForm(form, onSuccess) {\n\t\n\t  if (!form.elements.email.value) {\n\t    return;\n\t  }\n\t\n\t  var slugElems = form.elements.slug;\n\t\n\t  var slugs = [];\n\t\n\t  if (slugElems.length) {\n\t    // checkboxes\n\t    for (var i = 0; i < slugElems.length; i++) {\n\t      var slugElem = slugElems[i];\n\t      if (!slugElem.checked) continue;\n\t      slugs.push(slugElem.value);\n\t    }\n\t  } else {\n\t    // single element, explicit slug\n\t    slugs.push(slugElems.value);\n\t  }\n\t\n\t  if (!slugs.length) {\n\t    new notification.Info(\"Выберите рассылки из списка.\");\n\t    return;\n\t  }\n\t\n\t  var body = {\n\t    email: form.elements.email.value,\n\t    slug: slugs\n\t    // no remove/replace => action is \"add\"\n\t  };\n\t\n\t  var request = xhr({\n\t    method: 'POST',\n\t    url: form.action,\n\t    body: body\n\t  });\n\t\n\t  var submitButton = form.querySelector('[type=\"submit\"]');\n\t\n\t  var spinner = new Spinner({\n\t    elem: submitButton,\n\t    size: 'small',\n\t    elemClass: 'button_loading'\n\t  });\n\t  spinner.start();\n\t  submitButton.disabled = true;\n\t\n\t  request.addEventListener('loadend', function () {\n\t    spinner.stop();\n\t    submitButton.disabled = false;\n\t  });\n\t\n\t  var formLabel = form.getAttribute('data-newsletter-subscribe-form');\n\t\n\t  request.addEventListener('success', function (event) {\n\t    if (this.status == 200) {\n\t\n\t      window.metrika.reachGoal('NEWSLETTER-SUBSCRIBE', {\n\t        form: formLabel\n\t      });\n\t      window.ga('send', 'event', 'newsletter', 'subscribe', formLabel);\n\t\n\t      new notification.Success(event.result.message, 'slow');\n\t      form.elements.email.value = '';\n\t      onSuccess && onSuccess();\n\t    } else {\n\t\n\t      window.metrika.reachGoal('NEWSLETTER-SUBSCRIBE-FAIL', {\n\t        form: formLabel\n\t      });\n\t      window.ga('send', 'event', 'newsletter', 'subscribe-fail', formLabel);\n\t\n\t      new notification.Error(event.result.message);\n\t    }\n\t  });\n\t}\n\t\n\texports.submitSubscribeForm = submitSubscribeForm;\n\n/***/ },\n\n/***/ 446:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar notification = __webpack_require__(440);\n\tvar getCsrfCookie = __webpack_require__(447);\n\t// Wrapper about XHR\n\t// # Global Events\n\t// triggers document.loadstart/loadend on communication start/end\n\t//    --> unless options.noGlobalEvents is set\n\t//\n\t// # Events\n\t// triggers fail/success on load end:\n\t//    --> by default status=200 is ok, the others are failures\n\t//    --> options.normalStatuses = [201,409] allow given statuses\n\t//    --> fail event has .reason field\n\t//    --> success event has .result field\n\t//\n\t// # JSON\n\t//    --> send(object) calls JSON.stringify\n\t//    --> adds Accept: json (we want json) by default, unless options.raw\n\t// if options.json or server returned json content type\n\t//    --> autoparse json\n\t//    --> fail if error\n\t//\n\t// # CSRF\n\t//    --> requests sends header X-XSRF-TOKEN from cookie\n\t\n\tfunction xhr(options) {\n\t\n\t  var request = new XMLHttpRequest();\n\t\n\t  var method = options.method || 'GET';\n\t\n\t  var body = options.body;\n\t  var url = options.url;\n\t\n\t  request.open(method, url, options.sync ? false : true);\n\t\n\t  request.method = method;\n\t\n\t  // token/header names same as angular $http for easier interop\n\t  var csrfCookie = getCsrfCookie();\n\t  if (csrfCookie && !options.skipCsrf) {\n\t    request.setRequestHeader(\"X-XSRF-TOKEN\", csrfCookie);\n\t  }\n\t\n\t  if (({}).toString.call(body) == '[object Object]') {\n\t    // must be OPENed to setRequestHeader\n\t    request.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n\t    body = JSON.stringify(body);\n\t  }\n\t\n\t  if (!options.noDocumentEvents) {\n\t    request.addEventListener('loadstart', function (event) {\n\t      request.timeStart = Date.now();\n\t      var e = wrapEvent('xhrstart', event);\n\t      document.dispatchEvent(e);\n\t    });\n\t    request.addEventListener('loadend', function (event) {\n\t      var e = wrapEvent('xhrend', event);\n\t      document.dispatchEvent(e);\n\t    });\n\t    request.addEventListener('success', function (event) {\n\t      var e = wrapEvent('xhrsuccess', event);\n\t      e.result = event.result;\n\t      document.dispatchEvent(e);\n\t    });\n\t    request.addEventListener('fail', function (event) {\n\t      var e = wrapEvent('xhrfail', event);\n\t      e.reason = event.reason;\n\t      document.dispatchEvent(e);\n\t    });\n\t  }\n\t\n\t  if (!options.raw) {\n\t    // means we want json\n\t    request.setRequestHeader(\"Accept\", \"application/json\");\n\t  }\n\t\n\t  request.setRequestHeader('X-Requested-With', \"XMLHttpRequest\");\n\t\n\t  var normalStatuses = options.normalStatuses || [200];\n\t\n\t  function wrapEvent(name, e) {\n\t    var event = new CustomEvent(name);\n\t    event.originalEvent = e;\n\t    return event;\n\t  }\n\t\n\t  function fail(reason, originalEvent) {\n\t    var e = wrapEvent(\"fail\", originalEvent);\n\t    e.reason = reason;\n\t    request.dispatchEvent(e);\n\t  }\n\t\n\t  function success(result, originalEvent) {\n\t    var e = wrapEvent(\"success\", originalEvent);\n\t    e.result = result;\n\t    request.dispatchEvent(e);\n\t  }\n\t\n\t  request.addEventListener(\"error\", function (e) {\n\t    fail(\"Ошибка связи с сервером.\", e);\n\t  });\n\t\n\t  request.addEventListener(\"timeout\", function (e) {\n\t    fail(\"Превышено максимально допустимое время ожидания ответа от сервера.\", e);\n\t  });\n\t\n\t  request.addEventListener(\"abort\", function (e) {\n\t    fail(\"Запрос был прерван.\", e);\n\t  });\n\t\n\t  request.addEventListener(\"load\", function (e) {\n\t    if (!request.status) {\n\t      // does that ever happen?\n\t      fail(\"Не получен ответ от сервера.\", e);\n\t      return;\n\t    }\n\t\n\t    if (normalStatuses.indexOf(request.status) == -1) {\n\t      fail(\"Ошибка на стороне сервера (код \" + request.status + \"), попытайтесь позднее.\", e);\n\t      return;\n\t    }\n\t\n\t    var result = request.responseText;\n\t    var contentType = request.getResponseHeader(\"Content-Type\");\n\t    if (contentType.match(/^application\\/json/) || options.json) {\n\t      // autoparse json if WANT or RECEIVED json\n\t      try {\n\t        result = JSON.parse(result);\n\t      } catch (e) {\n\t        fail(\"Некорректный формат ответа от сервера.\", e);\n\t        return;\n\t      }\n\t    }\n\t\n\t    success(result, e);\n\t  });\n\t\n\t  // defer to let other handlers be assigned\n\t  setTimeout(function () {\n\t    request.send(body);\n\t  }, 0);\n\t\n\t  return request;\n\t}\n\t\n\tdocument.addEventListener('xhrfail', function (event) {\n\t  new notification.Error(event.reason);\n\t});\n\t\n\tmodule.exports = xhr;\n\n/***/ },\n\n/***/ 447:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = function () {\n\t  var csrfCookie = document.cookie.match(/XSRF-TOKEN=([\\w-]+)/);\n\t  return csrfCookie ? csrfCookie[1] : null;\n\t};\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** coursesCourse.05ab2d346bfe15eb542a.js\n **/","var newsletter = require('newsletter/client');\nvar Spinner = require('client/spinner');\nvar xhr = require('client/xhr');\n\ninitNewsletterForm();\n\ninitSignupButton();\n\nfunction initNewsletterForm() {\n\n  var form = document.querySelector('[data-newsletter-subscribe-form]');\n  if (!form) return;\n\n  form.onsubmit = function(event) {\n    event.preventDefault();\n    newsletter.submitSubscribeForm(form);\n  };\n\n}\n\nfunction initSignupButton() {\n\n  var link = document.querySelector('[data-group-signup-link]');\n  if (!link) return;\n\n  link.onclick = function(event) {\n\n    if (window.currentUser) {\n      return;\n    }\n\n    event.preventDefault();\n\n    var spinner = new Spinner({\n      elem:      link,\n      size:      'small',\n      class:     'submit-button__spinner',\n      elemClass: 'submit-button_progress'\n    });\n    spinner.start();\n\n    require.ensure('auth/client/authModal', function() {\n      spinner.stop();\n      var AuthModal = require('auth/client/authModal');\n      new AuthModal({\n        callback: function() {\n          window.location.href = link.href;\n        }\n      });\n    }, 'authClient');\n  };\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./handlers/courses/client/course/index.js\n **/","var Spinner = require('client/spinner');\nvar xhr = require('client/xhr');\nvar notification = require('client/notification');\n\nfunction submitSubscribeForm(form, onSuccess) {\n\n  if (!form.elements.email.value) {\n    return;\n  }\n\n  var slugElems = form.elements.slug;\n\n  var slugs = [];\n\n\n  if (slugElems.length) {\n    // checkboxes\n    for (var i = 0; i < slugElems.length; i++) {\n      var slugElem = slugElems[i];\n      if (!slugElem.checked) continue;\n      slugs.push(slugElem.value);\n    }\n\n  } else {\n    // single element, explicit slug\n    slugs.push(slugElems.value);\n  }\n\n  if (!slugs.length) {\n    new notification.Info(\"Выберите рассылки из списка.\");\n    return;\n  }\n\n  var body = {\n    email: form.elements.email.value,\n    slug: slugs\n    // no remove/replace => action is \"add\"\n  };\n\n  const request = xhr({\n    method: 'POST',\n    url:    form.action,\n    body:   body\n  });\n\n  var submitButton = form.querySelector('[type=\"submit\"]');\n\n  var spinner = new Spinner({\n    elem:      submitButton,\n    size:      'small',\n    elemClass: 'button_loading'\n  });\n  spinner.start();\n  submitButton.disabled = true;\n\n  request.addEventListener('loadend', ()=> {\n    spinner.stop();\n    submitButton.disabled = false;\n  });\n\n  var formLabel = form.getAttribute('data-newsletter-subscribe-form');\n\n  request.addEventListener('success', function(event) {\n    if (this.status == 200) {\n\n      window.metrika.reachGoal('NEWSLETTER-SUBSCRIBE', {\n        form: formLabel\n      });\n      window.ga('send', 'event', 'newsletter', 'subscribe', formLabel);\n\n      new notification.Success(event.result.message, 'slow');\n      form.elements.email.value = '';\n      onSuccess && onSuccess();\n    } else {\n\n      window.metrika.reachGoal('NEWSLETTER-SUBSCRIBE-FAIL', {\n        form: formLabel\n      });\n      window.ga('send', 'event', 'newsletter', 'subscribe-fail', formLabel);\n\n      new notification.Error(event.result.message);\n    }\n  });\n\n}\n\nexports.submitSubscribeForm = submitSubscribeForm;\n\n\n\n/** WEBPACK FOOTER **\n ** ./handlers/newsletter/client/index.js\n **/","var notification = require('client/notification');\nvar getCsrfCookie = require('client/getCsrfCookie');\n// Wrapper about XHR\n// # Global Events\n// triggers document.loadstart/loadend on communication start/end\n//    --> unless options.noGlobalEvents is set\n//\n// # Events\n// triggers fail/success on load end:\n//    --> by default status=200 is ok, the others are failures\n//    --> options.normalStatuses = [201,409] allow given statuses\n//    --> fail event has .reason field\n//    --> success event has .result field\n//\n// # JSON\n//    --> send(object) calls JSON.stringify\n//    --> adds Accept: json (we want json) by default, unless options.raw\n// if options.json or server returned json content type\n//    --> autoparse json\n//    --> fail if error\n//\n// # CSRF\n//    --> requests sends header X-XSRF-TOKEN from cookie\n\nfunction xhr(options) {\n\n  var request = new XMLHttpRequest();\n\n  var method = options.method || 'GET';\n\n  var body = options.body;\n  var url = options.url;\n\n  request.open(method, url, options.sync ? false : true);\n\n  request.method = method;\n\n  // token/header names same as angular $http for easier interop\n  var csrfCookie = getCsrfCookie();\n  if (csrfCookie && !options.skipCsrf) {\n    request.setRequestHeader(\"X-XSRF-TOKEN\", csrfCookie);\n  }\n\n  if ({}.toString.call(body) == '[object Object]') {\n    // must be OPENed to setRequestHeader\n    request.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    body = JSON.stringify(body);\n  }\n\n  if (!options.noDocumentEvents) {\n    request.addEventListener('loadstart', event => {\n      request.timeStart = Date.now();\n      var e = wrapEvent('xhrstart', event);\n      document.dispatchEvent(e);\n    });\n    request.addEventListener('loadend', event => {\n      var e = wrapEvent('xhrend', event);\n      document.dispatchEvent(e);\n    });\n    request.addEventListener('success', event => {\n      var e = wrapEvent('xhrsuccess', event);\n      e.result = event.result;\n      document.dispatchEvent(e);\n    });\n    request.addEventListener('fail', event => {\n      var e = wrapEvent('xhrfail', event);\n      e.reason = event.reason;\n      document.dispatchEvent(e);\n    });\n  }\n\n  if (!options.raw) { // means we want json\n    request.setRequestHeader(\"Accept\", \"application/json\");\n  }\n\n  request.setRequestHeader('X-Requested-With', \"XMLHttpRequest\");\n\n  var normalStatuses = options.normalStatuses || [200];\n\n  function wrapEvent(name, e) {\n    var event = new CustomEvent(name);\n    event.originalEvent = e;\n    return event;\n  }\n\n  function fail(reason, originalEvent) {\n    var e = wrapEvent(\"fail\", originalEvent);\n    e.reason = reason;\n    request.dispatchEvent(e);\n  }\n\n  function success(result, originalEvent) {\n    var e = wrapEvent(\"success\", originalEvent);\n    e.result = result;\n    request.dispatchEvent(e);\n  }\n\n  request.addEventListener(\"error\", e => {\n    fail(\"Ошибка связи с сервером.\", e);\n  });\n\n  request.addEventListener(\"timeout\", e => {\n    fail(\"Превышено максимально допустимое время ожидания ответа от сервера.\", e);\n  });\n\n  request.addEventListener(\"abort\", e => {\n    fail(\"Запрос был прерван.\", e);\n  });\n\n  request.addEventListener(\"load\", e => {\n    if (!request.status) { // does that ever happen?\n      fail(\"Не получен ответ от сервера.\", e);\n      return;\n    }\n\n    if (normalStatuses.indexOf(request.status) == -1) {\n      fail(\"Ошибка на стороне сервера (код \" + request.status + \"), попытайтесь позднее.\", e);\n      return;\n    }\n\n    var result = request.responseText;\n    var contentType = request.getResponseHeader(\"Content-Type\");\n    if (contentType.match(/^application\\/json/) || options.json) { // autoparse json if WANT or RECEIVED json\n      try {\n        result = JSON.parse(result);\n      } catch (e) {\n        fail(\"Некорректный формат ответа от сервера.\", e);\n        return;\n      }\n    }\n\n    success(result, e);\n  });\n\n  // defer to let other handlers be assigned\n  setTimeout(function() {\n    request.send(body);\n  }, 0);\n\n  return request;\n\n}\n\n\ndocument.addEventListener('xhrfail', function(event) {\n  new notification.Error(event.reason);\n});\n\n\nmodule.exports = xhr;\n\n\n\n/** WEBPACK FOOTER **\n ** ./modules/client/xhr.js\n **/","module.exports = function() {\n  var csrfCookie = document.cookie.match(/XSRF-TOKEN=([\\w-]+)/);\n  return csrfCookie ? csrfCookie[1] : null;\n};\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./modules/client/getCsrfCookie.js\n **/"],"sourceRoot":""}