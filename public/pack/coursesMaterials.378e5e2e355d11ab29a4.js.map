{"version":3,"sources":["webpack:///coursesMaterials.378e5e2e355d11ab29a4.js","webpack:///./handlers/courses/client/materials/index.js","webpack:///./client/xhr.js","webpack:///./client/getCsrfCookie.js"],"names":["coursesMaterials","webpackJsonp_name_",0,"module","exports","__webpack_require__","init","initShouldNotifyMaterials","initTeacherForm","initDeleteForm","onDelFormSubmit","form","request","xhr","method","url","action","body","filename","elements","value","addEventListener","event","notification","Success","closest","remove","document","e","target","hasAttribute","preventDefault","confirm","querySelector","materialFields","querySelectorAll","i","length","field","parentElement","classList","insertAdjacentHTML","checkbox","onchange","id","shouldNotifyMaterials","checked",155,"options","wrapEvent","name","CustomEvent","originalEvent","fail","reason","dispatchEvent","success","result","XMLHttpRequest","open","sync","csrfCookie","getCsrfCookie","skipCsrf","setRequestHeader","toString","call","JSON","stringify","noDocumentEvents","timeStart","Date","now","raw","normalStatuses","status","indexOf","responseText","contentType","getResponseHeader","match","json","parse","setTimeout","send","Error",156,"cookie"],"mappings":"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","file":"coursesMaterials.378e5e2e355d11ab29a4.js","sourcesContent":["var coursesMaterials =\nwebpackJsonp_name_([16],{\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar xhr = __webpack_require__(155);\n\tvar notification = __webpack_require__(147);\n\t\n\tfunction init() {\n\t\n\t  initShouldNotifyMaterials();\n\t\n\t  initTeacherForm();\n\t  initDeleteForm();\n\t}\n\t\n\tfunction initDeleteForm() {\n\t  document.addEventListener('submit', function (e) {\n\t    if (e.target.hasAttribute('data-action-delete')) {\n\t      e.preventDefault();\n\t      if (confirm('Удалить файл ' + e.target.elements.filename.value + '?')) {\n\t        onDelFormSubmit(e.target);\n\t      }\n\t    }\n\t  });\n\t\n\t  function onDelFormSubmit(form) {\n\t\n\t    var request = xhr({\n\t      method: 'DELETE',\n\t      url: form.action,\n\t      body: {\n\t        filename: form.elements.filename.value\n\t      }\n\t    });\n\t\n\t    request.addEventListener('success', function (event) {\n\t      new notification.Success(\"Файл удалён.\");\n\t      form.closest('tr').remove();\n\t    });\n\t  }\n\t}\n\t\n\tfunction initTeacherForm() {\n\t  var form = document.querySelector('[data-teacher-form]');\n\t  if (!form) return;\n\t\n\t  form.addEventListener('change', function () {\n\t    var materialFields = form.querySelectorAll('[name=\"materials\"]');\n\t\n\t    // shows \"delete\" button on non-empty fields\n\t    for (var i = 0; i < materialFields.length; i++) {\n\t      var field = materialFields[i];\n\t      if (field.value) {\n\t        field.parentElement.classList.remove('courses-materials-add__line_empty');\n\t      }\n\t    }\n\t\n\t    // adds an one more empty field if all full\n\t    if (form.querySelector('.courses-materials-add__line_empty') == null) {\n\t      form.querySelector('[data-materials-fields]').insertAdjacentHTML('beforeEnd', '<div class=\"courses-materials-add__line courses-materials-add__line_empty\">\\n          <input type=\"button\" value=\"x\" data-materials-remove class=\"courses-materials-add__remove\"><input name=\"materials\" type=\"file\" multiple>\\n        </div>');\n\t    }\n\t  });\n\t\n\t  form.addEventListener('click', function (event) {\n\t    if (event.target.hasAttribute('data-materials-remove')) {\n\t      event.target.parentElement.remove();\n\t    }\n\t  });\n\t}\n\t\n\tfunction initShouldNotifyMaterials() {\n\t\n\t  var checkbox = document.querySelector('[data-should-notify-materials]');\n\t  if (!checkbox) return; // teacher\n\t  var form = checkbox.closest('form');\n\t\n\t  checkbox.onchange = function () {\n\t\n\t    var request = xhr({\n\t      method: 'PATCH',\n\t      url: form.action,\n\t      body: {\n\t        id: form.elements.id.value,\n\t        shouldNotifyMaterials: form.elements.shouldNotifyMaterials.checked\n\t      }\n\t    });\n\t\n\t    request.addEventListener('success', function (event) {\n\t      new notification.Success(\"Настройка сохранена.\");\n\t    });\n\t  };\n\t}\n\t\n\tinit();\n\n/***/ },\n\n/***/ 155:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar notification = __webpack_require__(147);\n\tvar getCsrfCookie = __webpack_require__(156);\n\t// Wrapper about XHR\n\t// # Global Events\n\t// triggers document.loadstart/loadend on communication start/end\n\t//    --> unless options.noGlobalEvents is set\n\t//\n\t// # Events\n\t// triggers fail/success on load end:\n\t//    --> by default status=200 is ok, the others are failures\n\t//    --> options.normalStatuses = [201,409] allow given statuses\n\t//    --> fail event has .reason field\n\t//    --> success event has .result field\n\t//\n\t// # JSON\n\t//    --> send(object) calls JSON.stringify\n\t//    --> adds Accept: json (we want json) by default, unless options.raw\n\t// if options.json or server returned json content type\n\t//    --> autoparse json\n\t//    --> fail if error\n\t//\n\t// # CSRF\n\t//    --> requests sends header X-XSRF-TOKEN from cookie\n\t\n\tfunction xhr(options) {\n\t\n\t  var request = new XMLHttpRequest();\n\t\n\t  var method = options.method || 'GET';\n\t\n\t  var body = options.body;\n\t  var url = options.url;\n\t\n\t  request.open(method, url, options.sync ? false : true);\n\t\n\t  request.method = method;\n\t\n\t  // token/header names same as angular $http for easier interop\n\t  var csrfCookie = getCsrfCookie();\n\t  if (csrfCookie && !options.skipCsrf) {\n\t    request.setRequestHeader(\"X-XSRF-TOKEN\", csrfCookie);\n\t  }\n\t\n\t  if (({}).toString.call(body) == '[object Object]') {\n\t    // must be OPENed to setRequestHeader\n\t    request.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n\t    body = JSON.stringify(body);\n\t  }\n\t\n\t  if (!options.noDocumentEvents) {\n\t    request.addEventListener('loadstart', function (event) {\n\t      request.timeStart = Date.now();\n\t      var e = wrapEvent('xhrstart', event);\n\t      document.dispatchEvent(e);\n\t    });\n\t    request.addEventListener('loadend', function (event) {\n\t      var e = wrapEvent('xhrend', event);\n\t      document.dispatchEvent(e);\n\t    });\n\t    request.addEventListener('success', function (event) {\n\t      var e = wrapEvent('xhrsuccess', event);\n\t      e.result = event.result;\n\t      document.dispatchEvent(e);\n\t    });\n\t    request.addEventListener('fail', function (event) {\n\t      var e = wrapEvent('xhrfail', event);\n\t      e.reason = event.reason;\n\t      document.dispatchEvent(e);\n\t    });\n\t  }\n\t\n\t  if (!options.raw) {\n\t    // means we want json\n\t    request.setRequestHeader(\"Accept\", \"application/json\");\n\t  }\n\t\n\t  request.setRequestHeader('X-Requested-With', \"XMLHttpRequest\");\n\t\n\t  var normalStatuses = options.normalStatuses || [200];\n\t\n\t  function wrapEvent(name, e) {\n\t    var event = new CustomEvent(name);\n\t    event.originalEvent = e;\n\t    return event;\n\t  }\n\t\n\t  function fail(reason, originalEvent) {\n\t    var e = wrapEvent(\"fail\", originalEvent);\n\t    e.reason = reason;\n\t    request.dispatchEvent(e);\n\t  }\n\t\n\t  function success(result, originalEvent) {\n\t    var e = wrapEvent(\"success\", originalEvent);\n\t    e.result = result;\n\t    request.dispatchEvent(e);\n\t  }\n\t\n\t  request.addEventListener(\"error\", function (e) {\n\t    fail(\"Ошибка связи с сервером.\", e);\n\t  });\n\t\n\t  request.addEventListener(\"timeout\", function (e) {\n\t    fail(\"Превышено максимально допустимое время ожидания ответа от сервера.\", e);\n\t  });\n\t\n\t  request.addEventListener(\"abort\", function (e) {\n\t    fail(\"Запрос был прерван.\", e);\n\t  });\n\t\n\t  request.addEventListener(\"load\", function (e) {\n\t    if (!request.status) {\n\t      // does that ever happen?\n\t      fail(\"Не получен ответ от сервера.\", e);\n\t      return;\n\t    }\n\t\n\t    if (normalStatuses.indexOf(request.status) == -1) {\n\t      fail(\"Ошибка на стороне сервера (код \" + request.status + \"), попытайтесь позднее.\", e);\n\t      return;\n\t    }\n\t\n\t    var result = request.responseText;\n\t    var contentType = request.getResponseHeader(\"Content-Type\");\n\t    if (contentType.match(/^application\\/json/) || options.json) {\n\t      // autoparse json if WANT or RECEIVED json\n\t      try {\n\t        result = JSON.parse(result);\n\t      } catch (e) {\n\t        fail(\"Некорректный формат ответа от сервера.\", e);\n\t        return;\n\t      }\n\t    }\n\t\n\t    success(result, e);\n\t  });\n\t\n\t  // defer to let other handlers be assigned\n\t  setTimeout(function () {\n\t    request.send(body);\n\t  }, 0);\n\t\n\t  return request;\n\t}\n\t\n\tdocument.addEventListener('xhrfail', function (event) {\n\t  new notification.Error(event.reason);\n\t});\n\t\n\tmodule.exports = xhr;\n\n/***/ },\n\n/***/ 156:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = function () {\n\t  var csrfCookie = document.cookie.match(/XSRF-TOKEN=([\\w-]+)/);\n\t  return csrfCookie ? csrfCookie[1] : null;\n\t};\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** coursesMaterials.378e5e2e355d11ab29a4.js\n **/","'use strict';\n\nvar xhr = require('client/xhr');\nvar notification = require('client/notification');\n\nfunction init() {\n\n  initShouldNotifyMaterials();\n\n  initTeacherForm();\n  initDeleteForm();\n}\n\nfunction initDeleteForm() {\n  document.addEventListener('submit', e => {\n    if (e.target.hasAttribute('data-action-delete')) {\n      e.preventDefault();\n      if (confirm(`Удалить файл ${e.target.elements.filename.value}?`)) {\n        onDelFormSubmit(e.target);\n      }\n    }\n  });\n\n  function onDelFormSubmit(form) {\n\n    let request = xhr({\n      method: 'DELETE',\n      url:    form.action,\n      body:   {\n        filename: form.elements.filename.value\n      }\n    });\n\n    request.addEventListener('success', function(event) {\n      new notification.Success(\"Файл удалён.\");\n      form.closest('tr').remove();\n    });\n  }\n\n}\n\nfunction initTeacherForm() {\n  var form = document.querySelector('[data-teacher-form]');\n  if (!form) return;\n\n  form.addEventListener('change', function() {\n    let materialFields = form.querySelectorAll('[name=\"materials\"]');\n\n    // shows \"delete\" button on non-empty fields\n    for (var i = 0; i < materialFields.length; i++) {\n      var field = materialFields[i];\n      if (field.value) {\n        field.parentElement.classList.remove('courses-materials-add__line_empty');\n      }\n    }\n\n    // adds an one more empty field if all full\n    if (form.querySelector('.courses-materials-add__line_empty') == null) {\n      form.querySelector('[data-materials-fields]').insertAdjacentHTML('beforeEnd',\n        `<div class=\"courses-materials-add__line courses-materials-add__line_empty\">\n          <input type=\"button\" value=\"x\" data-materials-remove class=\"courses-materials-add__remove\"><input name=\"materials\" type=\"file\" multiple>\n        </div>`\n      );\n    }\n\n  });\n\n  form.addEventListener('click', function(event) {\n    if (event.target.hasAttribute('data-materials-remove')) {\n      event.target.parentElement.remove();\n    }\n  });\n}\n\n\nfunction initShouldNotifyMaterials() {\n\n  var checkbox = document.querySelector('[data-should-notify-materials]');\n  if (!checkbox) return; // teacher\n  var form = checkbox.closest('form');\n\n  checkbox.onchange = function() {\n\n    var request = xhr({\n      method: 'PATCH',\n      url:    form.action,\n      body:   {\n        id:                    form.elements.id.value,\n        shouldNotifyMaterials: form.elements.shouldNotifyMaterials.checked\n      }\n    });\n\n    request.addEventListener('success', function(event) {\n      new notification.Success(\"Настройка сохранена.\");\n    });\n  };\n\n}\n\ninit();\n\n\n\n/** WEBPACK FOOTER **\n ** ./handlers/courses/client/materials/index.js\n **/","var notification = require('client/notification');\nvar getCsrfCookie = require('client/getCsrfCookie');\n// Wrapper about XHR\n// # Global Events\n// triggers document.loadstart/loadend on communication start/end\n//    --> unless options.noGlobalEvents is set\n//\n// # Events\n// triggers fail/success on load end:\n//    --> by default status=200 is ok, the others are failures\n//    --> options.normalStatuses = [201,409] allow given statuses\n//    --> fail event has .reason field\n//    --> success event has .result field\n//\n// # JSON\n//    --> send(object) calls JSON.stringify\n//    --> adds Accept: json (we want json) by default, unless options.raw\n// if options.json or server returned json content type\n//    --> autoparse json\n//    --> fail if error\n//\n// # CSRF\n//    --> requests sends header X-XSRF-TOKEN from cookie\n\nfunction xhr(options) {\n\n  var request = new XMLHttpRequest();\n\n  var method = options.method || 'GET';\n\n  var body = options.body;\n  var url = options.url;\n\n  request.open(method, url, options.sync ? false : true);\n\n  request.method = method;\n\n  // token/header names same as angular $http for easier interop\n  var csrfCookie = getCsrfCookie();\n  if (csrfCookie && !options.skipCsrf) {\n    request.setRequestHeader(\"X-XSRF-TOKEN\", csrfCookie);\n  }\n\n  if ({}.toString.call(body) == '[object Object]') {\n    // must be OPENed to setRequestHeader\n    request.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    body = JSON.stringify(body);\n  }\n\n  if (!options.noDocumentEvents) {\n    request.addEventListener('loadstart', event => {\n      request.timeStart = Date.now();\n      var e = wrapEvent('xhrstart', event);\n      document.dispatchEvent(e);\n    });\n    request.addEventListener('loadend', event => {\n      var e = wrapEvent('xhrend', event);\n      document.dispatchEvent(e);\n    });\n    request.addEventListener('success', event => {\n      var e = wrapEvent('xhrsuccess', event);\n      e.result = event.result;\n      document.dispatchEvent(e);\n    });\n    request.addEventListener('fail', event => {\n      var e = wrapEvent('xhrfail', event);\n      e.reason = event.reason;\n      document.dispatchEvent(e);\n    });\n  }\n\n  if (!options.raw) { // means we want json\n    request.setRequestHeader(\"Accept\", \"application/json\");\n  }\n\n  request.setRequestHeader('X-Requested-With', \"XMLHttpRequest\");\n\n  var normalStatuses = options.normalStatuses || [200];\n\n  function wrapEvent(name, e) {\n    var event = new CustomEvent(name);\n    event.originalEvent = e;\n    return event;\n  }\n\n  function fail(reason, originalEvent) {\n    var e = wrapEvent(\"fail\", originalEvent);\n    e.reason = reason;\n    request.dispatchEvent(e);\n  }\n\n  function success(result, originalEvent) {\n    var e = wrapEvent(\"success\", originalEvent);\n    e.result = result;\n    request.dispatchEvent(e);\n  }\n\n  request.addEventListener(\"error\", e => {\n    fail(\"Ошибка связи с сервером.\", e);\n  });\n\n  request.addEventListener(\"timeout\", e => {\n    fail(\"Превышено максимально допустимое время ожидания ответа от сервера.\", e);\n  });\n\n  request.addEventListener(\"abort\", e => {\n    fail(\"Запрос был прерван.\", e);\n  });\n\n  request.addEventListener(\"load\", e => {\n    if (!request.status) { // does that ever happen?\n      fail(\"Не получен ответ от сервера.\", e);\n      return;\n    }\n\n    if (normalStatuses.indexOf(request.status) == -1) {\n      fail(\"Ошибка на стороне сервера (код \" + request.status + \"), попытайтесь позднее.\", e);\n      return;\n    }\n\n    var result = request.responseText;\n    var contentType = request.getResponseHeader(\"Content-Type\");\n    if (contentType.match(/^application\\/json/) || options.json) { // autoparse json if WANT or RECEIVED json\n      try {\n        result = JSON.parse(result);\n      } catch (e) {\n        fail(\"Некорректный формат ответа от сервера.\", e);\n        return;\n      }\n    }\n\n    success(result, e);\n  });\n\n  // defer to let other handlers be assigned\n  setTimeout(function() {\n    request.send(body);\n  }, 0);\n\n  return request;\n\n}\n\n\ndocument.addEventListener('xhrfail', function(event) {\n  new notification.Error(event.reason);\n});\n\n\nmodule.exports = xhr;\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/xhr.js\n **/","module.exports = function() {\n  var csrfCookie = document.cookie.match(/XSRF-TOKEN=([\\w-]+)/);\n  return csrfCookie ? csrfCookie[1] : null;\n};\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./client/getCsrfCookie.js\n **/"],"sourceRoot":""}