{
  "_args": [
    [
      "mongoose-unique-validator@git://github.com/iliakan/mongoose-unique-validator.git",
      "/js/build"
    ]
  ],
  "_from": "git://github.com/iliakan/mongoose-unique-validator.git",
  "_id": "mongoose-unique-validator@0.3.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/mongoose-unique-validator",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/iliakan/mongoose-unique-validator/master/package.json",
      "gitUrl": "git://github.com/iliakan/mongoose-unique-validator.git",
      "httpsUrl": "git+https://github.com/iliakan/mongoose-unique-validator.git",
      "shortcut": "github:iliakan/mongoose-unique-validator",
      "ssh": "git@github.com:iliakan/mongoose-unique-validator.git",
      "sshUrl": "git+ssh://git@github.com/iliakan/mongoose-unique-validator.git",
      "type": "github"
    },
    "name": "mongoose-unique-validator",
    "raw": "mongoose-unique-validator@git://github.com/iliakan/mongoose-unique-validator.git",
    "rawSpec": "git://github.com/iliakan/mongoose-unique-validator.git",
    "scope": null,
    "spec": "git://github.com/iliakan/mongoose-unique-validator.git",
    "type": "hosted"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git://github.com/iliakan/mongoose-unique-validator.git#ae8e9ce4a5c34f70f596b79200caf0b3e598abaa",
  "_shasum": "735f4bd5e52211d995111ab0967b11f0999a719f",
  "_shrinkwrap": null,
  "_spec": "mongoose-unique-validator@git://github.com/iliakan/mongoose-unique-validator.git",
  "_where": "/js/build",
  "author": {
    "email": "haswell00@gmail.com",
    "name": "Blake Haswell",
    "url": "http://blakehaswell.com/"
  },
  "bugs": {
    "url": "https://github.com/blakehaswell/mongoose-unique-validator/issues"
  },
  "dependencies": {},
  "description": "mongoose-unique-validator is a plugin which adds pre-save validation for unique fields within a Mongoose schema.",
  "devDependencies": {
    "jasmine-node": "1.10.2",
    "mongoose": "3.8.x"
  },
  "gitHead": "ae8e9ce4a5c34f70f596b79200caf0b3e598abaa",
  "homepage": "https://github.com/blakehaswell/mongoose-unique-validator#readme",
  "keywords": [
    "mongoose",
    "unique",
    "validator"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "mongoose-unique-validator",
  "optionalDependencies": {},
  "readme": "- FORKED the version which allows custom message for each path.\n- I use this instead of MongoError, because it stacks with other errors, giving a single ValidationError with all fields.\n\n\nmongoose-unique-validator\n=========================\n\nmongoose-unique-validator is a plugin which adds pre-save validation for unique fields within a Mongoose schema.\n\nThis makes error handling much easier, since you will get a Mongoose validation error when you attempt to violate a\n[unique constraint](http://mongoosejs.com/docs/api.html#schematype_SchemaType-unique), rather than an E11000 error\nfrom MongoDB.\n\nUsage\n-----\n\n```\nnpm install mongoose-unique-validator\n```\n\nThen, simply apply the plugin to your schema:\n\n```js\nvar mongoose = require('mongoose');\nvar uniqueValidator = require('mongoose-unique-validator');\n\nvar mySchema = mongoose.Schema(/* put your schema definition here */);\nmySchema.plugin(uniqueValidator);\n```\n\nExample\n-------\n\nLetâ€™s say you have a user schema. You can easily add validation for the unique constraints in this schema by applying\nthe `uniqueValidator` plugin to your user schema:\n\n```js\nvar mongoose = require('mongoose');\nvar uniqueValidator = require('mongoose-unique-validator');\n\n// Define your schema as normal.\nvar userSchema = mongoose.Schema({\n    username: { type: String, required: true, unique: true },\n    email: { type: String, index: true, unique: true, required: true },\n    password: { type: String, required: true }\n});\n\n// Apply the uniqueValidator plugin to userSchema.\nuserSchema.plugin(uniqueValidator);\n```\n\nNow when you try to save a user, the unique validator will check for duplicate database entries and report them just\nlike any other validation error:\n\n```js\nvar user = new User({ username: 'JohnSmith', email: 'john.smith@gmail.com', password: 'j0hnNYb0i' });\nuser.save(function (err) {\n    console.log(err);\n});\n```\n\n```js\n{\n    message: 'Validation failed',\n    name: 'ValidationError',\n    errors: {\n        username: {\n            message: 'Validator failed for path `username` with value `JohnSmith`',\n            name: 'ValidatorError',\n            path: 'username',\n            type: 'user defined',\n            value: 'JohnSmith'\n        }\n    }\n}\n```\n\nCustom Error Messages\n---------------------\n\nYou can pass through a custom error message as part of the optional `options` argument:\n\n```js\nuserSchema.plugin(uniqueValidator, { message: 'Error, expected {PATH} to be unique.' });\n```\n\nYou have access to all of the standard Mongoose error message templating:\n\n*   `{PATH}`\n*   `{VALUE}`\n*   `{TYPE}`\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/blakehaswell/mongoose-unique-validator.git"
  },
  "scripts": {
    "test": "jasmine-node spec/ --forceexit --captureExceptions"
  },
  "version": "0.3.0"
}
